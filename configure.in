dnl  Process this file with autoconf to produce a configure script.
dnl  Copyright (C) 1998 John Harper <john@dcs.warwick.ac.uk>
dnl  $Id$
dnl
dnl  This file is part of sawmill.
dnl
dnl  sawmill is free software; you can redistribute it and/or modify it
dnl  under the terms of the GNU General Public License as published by
dnl  the Free Software Foundation; either version 2, or (at your option)
dnl  any later version.
dnl
dnl  sawmill is distributed in the hope that it will be useful, but
dnl  WITHOUT ANY WARRANTY; without even the implied warranty of
dnl  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl  GNU General Public License for more details.
dnl
dnl  You should have received a copy of the GNU General Public License
dnl  along with sawmill; see the file COPYING.  If not, write to
dnl  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.

AC_REVISION($Revision$)

AC_INIT(src/sawmill.h)
AC_CONFIG_HEADER(config.h)
AC_CONFIG_AUX_DIR(etc)

dnl Release versioning info
version="0.25.2"

output_files="src/Makefile lisp/Makefile\
 themes/Makefile man/Makefile po/Makefile Makedefs Makefile sawmill.spec"

SUBDIRS="src lisp themes man po"
AC_SUBST(SUBDIRS)

GNOMEDIRS="/ /usr /usr/local /opt /gnome /opt/gnome"
AC_SUBST(GNOMEDIRS)

add_subdir () {
  sub=$1; shift
  SUBDIRS="$SUBDIRS $sub"
  output_files="$output_files $sub/Makefile"
  for ext in $*; do
    output_files="$output_files $sub/$ext"
  done
  unset sub
}

dnl Find the system type
AC_CANONICAL_HOST

dnl Remove trailing slash in $prefix if necessary
case "${prefix}" in
  */)
    prefix=`echo ${prefix} | sed -e 's/^\(.*\)\/$/\1/'`
    ;;
esac

sawmilldir='${datadir}/sawmill'
lispdir='${sawmilldir}/${version}/lisp'
localedir='${sawmilldir}/${version}/locale'
sawmillexecdir='${libexecdir}/sawmill/${version}/${host_type}'

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_GCC_TRADITIONAL

dnl Workaround etc/install-sh not being found from subdirectories
if test "$INSTALL" = "$ac_install_sh"; then
  dnl Why is the backslash needed?
  INSTALL='\${top_srcdir}/etc/install-sh -c'
fi

dnl Checks for libraries.
AC_CHECK_LIB(nsl, xdr_void)
AC_CHECK_LIB(socket, bind)

dnl Checks for header files.
AC_PATH_XTRA
AC_HEADER_STDC
AC_HEADER_TIME
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h sys/time.h sys/utsname.h unistd.h memory.h X11/SM/SMlib.h)

dnl Check for librep
AM_PATH_REP(0.10)

dnl is X available?
if test "${no_x}" != "yes"; then
  AC_DEFINE(HAVE_X11)
else
  AC_MSG_ERROR([You need X11 for sawmill])
fi

AM_PATH_IMLIB
AM_PATH_GTK(1.2.0)

AC_ARG_ENABLE(capplet,
 [  --enable-capplet	  Build the sawmill GNOME capplet [default]
  --disable-capplet	  Don't built the capplet], [],
 [enable_capplet=yes])

if test "$enable_capplet" = "yes"; then
  AC_MSG_CHECKING([for GNOME control center config])
  GNOME_CC_CFLAGS="`gnome-config --cflags capplet`"
  GNOME_CC_LIBS="`gnome-config --libs capplet`"
  if test $? -ne 0; then
    AC_MSG_RESULT([no])
    AC_MSG_WARN([Can't run "gnome-config capplet", not building capplet])
  else
    AC_MSG_RESULT([yes])
    AC_SUBST(GNOME_CC_CFLAGS)
    AC_SUBST(GNOME_CC_LIBS)
    add_subdir "capplet"
  fi
fi

AC_ARG_ENABLE(themer,
 [  --enable-themer	  Build the sawmill-themer program [default]
  --disable-themer	  Don't build the themer], [],
 [enable_themer=yes])

if test "$enable_themer" = yes; then
  dnl configure redirects &5 to config.log
  AC_MSG_CHECKING([for rep-gtk libglade wrapper])
  if REP_GTK_DONT_INITIALIZE=1 rep --batch -l libglade 2>&5; then 
    AC_MSG_RESULT([yes])
    add_subdir "themer"
  else 
    AC_MSG_RESULT([no])
    AC_MSG_WARN([Can't load rep's libglade wrapper, not building themer])
  fi
fi

dnl Check for Doug Lea's malloc in libc, otherwise compile dlmalloc.c
doug_lea_malloc=yes
AC_CHECK_FUNC(malloc_get_state, , doug_lea_malloc=no)
AC_CHECK_FUNC(malloc_set_state, , doug_lea_malloc=no)
if test "$doug_lea_malloc" = "no"; then
  case ${host} in
    *-dec-osf*)
      # dlmalloc is broken on Tru64
      AC_DEFINE(LIBC_MALLOC)
      ;;
    *)
      LIBOBJS="${LIBOBJS} dlmalloc.o"
      AC_DEFINE(DOUG_LEA_MALLOC)
      ;;
  esac
else
  AC_DEFINE(DOUG_LEA_MALLOC)
  AC_DEFINE(LIBC_MALLOC)
fi

dnl Check for readline
AC_ARG_WITH(readline,
 [  --with-readline         Support readline input editing], [],
 [with_readline=maybe])

dnl Only look if explicitly asked for..
if test "$with_readline" = "yes"; then
  READLINE_LIBS=""
  AC_SUBST(READLINE_LIBS)
  AC_CHECK_LIB(ncurses, tparm, TERMLIB=-lncurses,
   AC_CHECK_LIB(termcap, tgetent, TERMLIB=-ltermcap))
  saved_LIBS="$LIBS"
  LIBS="$LIBS $TERMLIB"
  AC_CHECK_LIB(readline, readline,
   [AC_CHECK_HEADER(readline/readline.h,
    [READLINE_LIBS="-lreadline $TERMLIB"
     AC_DEFINE(HAVE_LIBREADLINE)])])
  LIBS="$saved_LIBS"
fi

dnl Check for GNOME location
AC_ARG_WITH(gnome_prefix,
 [  --with-gnome-prefix=DIR Root of GNOME installation],
 [if test -d $with_gnome_prefix; then
   GNOMEDIRS="$with_gnome_prefix";
 fi])

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T

dnl Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(gethostname socket snprintf getpagesize)

dnl Custom tests

dnl How do we get dependency lines in the Makefile?
if test "x${GCC}" = "xyes"; then
  MAKEDEP='$(CC) -MM -MG'
else
  case ${host} in
    *-dec-osf*)
      # works on Tru64
      MAKEDEP='$(CC) -M'
      ;;
    *-sun-solaris*)
      # works on Solaris
      MAKEDEP='/usr/lib/cpp -M'
      ;;
    *)
      # disable dependences?
      MAKEDEP='true'
      ;;
  esac
fi
AC_SUBST(MAKEDEP)

dnl If using GCC and it doesn't look as though the cflags have been
dnl set explicitly, add some warning options. Turn off implicit-int
dnl warnings since the X11 includes on Solaris generate a lot of these
if test "x${GCC}" = "xyes" -a "x$CFLAGS" = "x-g -O2"; then
  CFLAGS="${CFLAGS} -Wall -Wmissing-prototypes -Wno-implicit-int"
fi

AC_MSG_CHECKING(for languages to install)
AC_ARG_ENABLE(linguas,
  [  --enable-linguas=LANGS...
			  Install language catalogs for language codes LANGS],
  [ LINGUAS="$enableval" ], [ LINGUAS="" ])
if test "x$LINGUAS" = x; then
  changequote({,})
  LINGUAS="`echo po/*.po | sed -e 's/po\/\([^ ]*\)\.po/\1/g'`"
  changequote([,])
fi
dnl too gross for words..
if test $REP_MSGFMT = true; then
  LINGUAS=""
fi
AC_MSG_RESULT($LINGUAS)
AC_SUBST(LINGUAS)

dnl Nonstandard exported symbols
AC_SUBST(version)
AC_SUBST(sawmilldir)
AC_SUBST(sawmillexecdir)
AC_SUBST(lispdir)
AC_SUBST(localedir)
AC_SUBST(HAVE_X11)
AC_SUBST(LIBOBJS)
AC_SUBST(CPPFLAGS)
AC_SUBST(CFLAGS)
AC_SUBST(LIBS)
AC_SUBST(X_CFLAGS)
AC_SUBST(X_LIBS)
AC_SUBST(X_EXTRA_LIBS)
AC_SUBST(IMLIB_CFLAGS)
AC_SUBST(IMLIB_LIBS)

dnl Build all files
AC_OUTPUT(${output_files})

dnl If it doesn't look like GNU Make is being used, give a friendly warning
tem=`make --version -f /dev/null 2>&1 | grep GNU`
if test "x$tem" = "x"; then
  AC_MSG_WARN([You need to use GNU Make when compiling sawmill])
fi

dnl Local variables:
dnl major-mode: sh-mode
dnl End:
