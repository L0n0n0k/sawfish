1999-08-31  John Harper  <john@dcs.warwick.ac.uk>

	* version 0.4

	* frames.c: new attribute in frame part alists: `renderer', a
	function called with args (IMAGE STATE). It should draw the
	background of the frame part into IMAGE for STATE (nil,
	focused, highlighted, clicked)

	* sawmill.h (struct frame_part): new fields `renderer',
	`rendered_image' and `rendered_state'

	* images.c (make_image): search the list of images before
	making a new lisp object
	(Fmake_sized_image): new function, create a blank image of a
	certain size and colour

	* gradient.c (Fdraw_vertical_gradient,
	Fdraw_horizontal_gradient, Fdraw_diagonal_gradient): new
	plugin, new functions

	* windows.c, main.c, keys.c, images.c, functions.c, frames.c,
	fonts.c, events.c, cursors.c, colors.c: added doc strings for
	built-in functions

	* display.c (sys_init): don't connect to display if batch-mode
	is non-nil
	* keys.c, images.c, frames.c, fonts.c, cursors.c, colors.c: if
	batch-mode is non-nil, don't do anything that would access the
	display when initialising or shutting down

	* windows.c (Fset_client_state): deleted

	* functions.c (Fget_x_property, Fset_x_property): use CARD16
	and CARD32 types to access 16- and 32-bit data respectively

	* keys.c (num_lock_mod): initialised to the Num_Lock modifier,
	ignored in events
	(grab_event, ungrab_event): grab all combinations including
	LockMask and num_lock_mod

1999-08-30  John Harper  <john@dcs.warwick.ac.uk>

	* keys.c (translate_event): ignore the Lock modifier

	* functions.c (Fgrab_pointer): pass last_event_time to
	XGrabPointer (), not CurrentTime (since Fungrab_pointer also
	passes last_event_time)

	* events.c (handle_input_mask): set last_event_time to
	CurrentTime on leaving the function

	* sawmill.h: defining DEBUG to zero sends debugging output to
	db_printf ()
	* display.c (db_printf): replacement printf to store debugging
	output in one of rep's debug buffers

	* sawmill-ui.jl (keymap-shell): doesn't choke on non-symbol
	commands anymore, but it's still not possible to edit arbitrary
	forms..

	* events.c (button_press): click the frame before looking for
	the context map (since we only look for these maps in clicked
	frame parts)
	(unmap_notify): call reset_frame_parts

	* windows.c (Fhide_window): call reset_frame_parts

	* frames.c (reset_frame_parts): new function, resets clicked or
	highlighted state associated with a window frame

1999-08-29  John Harper  <john@dcs.warwick.ac.uk>

	* sawmill-ui.jl: fix option-menu problems, abbreviate displayed
	font names to just the font's family

	* sawmill.h: define _GNU_SOURCE
	* functions.c, client.c: some minor `-ansi -pedantic' fixes

1999-08-27  John Harper  <john@dcs.warwick.ac.uk>

	* events.c (colormap_notify): fix bug where changing a colormap
	when no window is focused causes a segfault

	* sawmill.h (XlibSpecificationRelease): if undefined, define to
	4; this really means X11R4 or _less_

	* display.c (XGetAtomNames): implement using XGetAtomName ()
	for X11R5 or less

	* events.c (configure_request): if we know about the window,
	call raise-window or lower-window instead of XRaiseWindow () or
	XLowerWindow ()

	* sawmill-ui.jl (build-set): only call
	gtk-option-menu-set-history if history is non-nil

1999-08-26  John Harper  <john@dcs.warwick.ac.uk>

	* sawmill.h (struct frame_part): added `highlighted' and
	`pending_refresh' bits

	* events.c: handle highlighting frame parts, and temporarily
	unclicking parts when the mouse leaves them. If the
	ButtonRelease occurs when the mouse isn't in the part, the
	context-map is ignored

	* frames.c: the background/foreground attributes are now
	(NORMAL FOCUSED HIGHLIGHTED CLICKED) (note addition of
	highlighted class, displayed when the mouse is in the part)
	(Vframe_draw_mutex): when t no frame parts are redrawn

	* events.c (Qproperty_notify_hook, Qreparent_notify_hook): new
	hooks
	(get_event_mask): new function, returns an event mask that
	would select a specified type of event

	* keys.c (Fproxy_current_event): allow event_mask and propagate
	args to XSendEvent to be specified

	* frames.c (refresh_frame_part): new function, draws both
	background and foreground

	* sawmill-ui.jl (build-set): sets can now be displayed as
	option menus, clists, as well as the old radio buttons,
	controlled by the ui-set-style var, or the :widget key

1999-08-25  John Harper  <john@dcs.warwick.ac.uk>

	* display.c (beep): new function, hooked into rep_beep_fun

	* functions.c (Fdelete_window): only send WM_DELETE_WINDOW
	message if window has said it can handle it, otherwise
	XKillClient

	* windows.c (Fstacking_order): new function

	* functions.c (Fraise_window, Flower_window,
	Fraise_lower_window, Fcirculate_up, Fcirculate_down): deleted
	(Frestack_windows): new function

	* events.c: replace calls to XMapRaised by XMapWindow

	* display.c (error_handler): don't report BadWindow errors that
	we've already handled

1999-08-24  John Harper  <john@dcs.warwick.ac.uk>

	* sawmill-ui.jl (build-keymap-shell:update-doc): translate
	newlines to spaces in doc strings
	(build-keymap): flatten and wrap the keymap doc string

	* colors.c (Fcolor_rgb): new function

	* fonts.c (Ftext_width, Ffont_height): new functions

	* sawmill-ui.jl (build-keymap-shell:set-binding): align the
	clist flush left when scrolling to the selected command

	* events.c (key_press): ignore KeyRelease events

1999-08-23  John Harper  <john@dcs.warwick.ac.uk>

	* frames.c (list_frame_generator): was making the rectangle of
	the client window too big when setting the shape mask

	* commands.c (Fcall_command): the `W' specifier ignores the
	current event's window if it's the root

	* client.c: new option `-c COMMAND' to invoke an interactive
	function

	* sawmill-ui.jl (build-pages): use a HPaned widget to contain
	the box and group frame, this stops the boundary changing to
	match their relative sizes

	* version 0.3a

	* functions.c (Fgrab_pointer): remove the hack choosing which
	window to grab in
	(Fungrab_pointer): if we're waiting for a ButtonRelease on a
	frame-part, unclick it

	* events.c: changes to how frame-part "clicking" is handled
	(Fquery_pointer): optional arg GET, to force a round-trip to
	the server
	(Faccept_x_input): new function, process any available X events

	* sawmill-ui.jl (keymap-shell): this now has a new key
	`:doc-path' giving the list of documentation databases. This is
	used to display the doc-string of the selected command

	* client.c: after sending the event, _always_ wait for a
	PropertyNotify event, not just for synchronous requests

1999-08-22  John Harper  <john@dcs.warwick.ac.uk>

	* version 0.3

	* client.c: new client-server protocol, using X properties to
	allow inter-host communications
	* server.h, server.c: deleted, the server is now Lisp code

	* windows.c (x_find_window_by_id): try harder to find a window
	object for an id, possibly returning an invalidated object
	(remove_window): even if the window has been invalidated, try
	to remove the frame when appropriate

	* sawmill.h (Lisp_Window): new field `saved_id', this is
	another copy of the window id, but isn't zeroed when the error
	handler finds that the window has been deleted

	* events.c (property_notify): between XGet.. calls, check if
	the error handler invalidated the window

	* events.c (destroy_notify): use the x_find_window_by_id
	function to search for a window object for the destroyed window
	(since the error handler may have invalidated it)

	* keys.c: handle `Alt' similarly to `Meta' (i.e. find the
	actual modifier bit then subsitute it)
	* keys.h: added EV_MOD_ALT

	* events.c (Fquery_pointer): only use the stored mouse position
	if we're currently handling an event, and this event stored the
	position

	* functions.c (Fgrab_server, Fungrab_server): set
	`rep_message_fun' to null whilst the server is grabbed (in case
	stdout is to an xterm)

	* functions.c (Fgrab_pointer): if the specified window object
	doesn't have a mapped frame, then grab in the root window

	* functions.c (Fget_x_property): return nil if property doesn't
	exist

1999-08-21  John Harper  <john@dcs.warwick.ac.uk>

	* functions.c (Fraise_window, Flower_window,
	Fraise_lower_window, Fdelete_window, Fdestroy_window): these
	now use the `W' interactive decl

	* keys.c (Fcurrent_event_window): check if the window is a
	frame part
	(lookup_binding): new arg, CURRENT-WINDOW, the window whose
	`keymap' property is to be scanned
	(eval_input_event): if the event is a pointer event, look for a
	binding in the window that received the event, not the window
	with the input focus

	* commands.c (Fcall_command): new interactive specs, `w', the
	window that received the current event, and `W', either the
	same as `w' or the focused window

	* main.c (Qbefore_exit_hook): new hook; called before exiting

	* keys.c (Fcurrent_event_window): as well as returning a window
	object, this might instead return the symbol `root' or the
	integer id of an unmanaged window
	(Fproxy_current_event): send the current event on to a
	specified window

	* gnome.c: deleted, this is now done in lisp

	* functions.c (Fdelete_window): accept integer window ids
	(Fdestroy_window): if an integer window id, use XDestroyWindow,
	not XKillClient
	(Fsend_client_message): new function
	(Fcreate_window): new function (so I can do gnome-wm in lisp)
	(x-atom, x-atom-name): translate between symbols<->atoms

	* events.c (client_message): now pass _all_ the data in the
	event to the hook, format is (WINDOW TYPE-ATOM DATA-ARRAY).
	DATA-ARRAY is a string (8-bit format) or vector of integers

	* display.c (x_atom_symbol, x_win_from_arg): new functions

1999-08-20  John Harper  <john@dcs.warwick.ac.uk>

	* functions.c (Flist_x_properties, Fdelete_x_property,
	Fset_x_property, Fget_x_property): new functions

	* client.c (eval_lisp_form): don't use puts () to output the
	result string since it could contain zero bytes

	* windows.c (remove_window): a new argument FROM-ERROR. If
	non-nil then we're being called from the error handler, and
	thus won't generate any X protocol requests, let gc destroy the
	frame later

	* frames.c (frame_part_destroyer): don't try to delete parts
	without windows

1999-08-19  John Harper  <john@dcs.warwick.ac.uk>

	* frames.c, events.c: it's possible for Imlib_render to trigger
	the X error handler, and possibly invalidate the window that's
	currently being manipulated. So test that `w->id != 0' in
	suitable places

1999-08-16  John Harper  <john@dcs.warwick.ac.uk>

	* version 0.2

	* display.c (sys_init): create a new window `no_focus_window'
	that gets given the focus when no other window has it (so we
	receive KeyPress events from it)
	* windows.c (focus_on_window): when told to focus on nothing,
	focus on the `no_focus_window'
	* events.c (unmap_notify): if the window being unmapped has the
	focus (after calling the unmap-notify-hook), unfocus it

1999-08-15  John Harper  <john@dcs.warwick.ac.uk>

	* sawmill-ui.jl: two new elements `keymap' and `keymap-shell',
	for keymap customization

	* events.c (circulate_notify): empty event handler

	* keys.c (Fgrab_keymap, Fungrab_keymap): new functions

	* keys.c (lookup_event_name): fix the bug where only the bottom
	16 modifier bits were being checked

1999-08-14  John Harper  <john@dcs.warwick.ac.uk>

	* sawmill-ui.jl (build-color:clicked): hide the `Help' button
	in the color selection dialog (since it does nothing)

	* sawmill-ui.jl: always format color specifiers correctly

1999-08-13  John Harper  <john@dcs.warwick.ac.uk>

	* sawmill-ui.jl (build-color): implements a separate `color'
	element (pretty similar to the `font' element)
	(build-pages): pages are now implemented as a clist and a frame
	(instead of a notebook). This can be changed via the
	ui-pages-style variable

	* frames.c (list_frame_generator): the `foreground',
	`background' and `font' keys may now be functions

	* frames.c (set_frame_part_bg): for shaped images, apply the
	mask at the correct frame coordinates

1999-08-12  John Harper  <john@dcs.warwick.ac.uk>

	* sawmill.h (Lisp_Window): cache the TRANSIENT_FOR hint
	* windows.c (Fwindow_transient_p): use the cached value

	* windows.c (focus_on_window): update `focus_window'
	immediately, instead of waiting for the FocusIn event
	* events.c, display.c: be more careful when changing the
	`focus_window' variable

	* events.c: record the time of the _two_ most recent pointer
	positions, the new function Fquery_last_pointer allows access
	to the earlier position

1999-08-11  John Harper  <john@dcs.warwick.ac.uk>

	* sawmill-ui.jl: use a ButtonBox for the control buttons, don't
	display the Revert and Refresh buttons (but they're still
	there, just not enabled)

1999-08-10  John Harper  <john@dcs.warwick.ac.uk>

	* sawmill-ui.jl, sawmill-menu.jl: copied from top-level
	directory, these are now compiled before being installed

	* events.c (handle_input_mask): new function, handle all
	outstanding events matching a specified event mask

	* windows.c (Fset_window_frame): between removing the old frame
	and installing the new frame handle all SubstructureNotify
	events to prevent the dread infinite frame-add-remove bug

1999-08-09  John Harper  <john@dcs.warwick.ac.uk>

	* sawmill.h (Lisp_Window): make `reparenting' an int so it can
	be incremented and decremented
	* windows.c, events.c: some magic to make the w->reparenting
	work when called from Fset_window_frame

	* frames.c (frame_part_destroyer): destroy frame part windows
	and delete their contexts
	(list_frame_generator): don't look at the frame's unshaped
	property if the client window is shaped

	* colors.c (Fcolor_name, Fcolorp): new functions
	* fonts.c (Ffont_name, Ffontp): new functions

1999-08-07  John Harper  <john@dcs.warwick.ac.uk>

	* main.c (sawmill_symbols): set interrupt-mode and error-mode
	to top-level; try to stop the wm getting hung in a
	recursive-edit

1999-08-04  John Harper  <john@dcs.warwick.ac.uk>

	* gnome.c (rep_dl_init): delete some properties from the root
	window that other wm's may have set but not removed

1999-08-03  John Harper  <john@dcs.warwick.ac.uk>

	* version 0.1

	* main.c (Qsawmill_version): new variable

1999-08-02  John Harper  <john@dcs.warwick.ac.uk>

	* windows.c (Fset_client_state): set the WM_STATE property of a
	window

	* main.c (add_hook): new function

	* gnome.c: support the _WIN_STATE hint (but only the sticky
	attribute)

	* events.c (configure_request): raising a window uniconify's
	it, so that the GNOME pager can uniconify windows (!?)

	* cursors.c (Fget_cursor): if a symbol, dereference it's
	cursor-shape property _before_ scanning the list for an
	existing cursor

	* windows.c (Fcall_window_hook): new function, similar to
	call-hook, but first hook argument is always a window. Before
	evaluating the symbol value, look for a property of the same
	name in the window
	* events.c, display.c, windows.c: where appropriate use
	Fcall_window_hook instead of Fcall_hook

	* gnome.c (rep_dl_init): if ignored-window-names or
	sticky-window-names are void, set them to nil before consing on
	the gnome window names

1999-08-01  John Harper  <john@dcs.warwick.ac.uk>

	* gnome.c (Fgnome_set_workspace): if no workspace is active,
	pretend that workspace zero is

	* display.c (error_handler): call destroy-notify-hook _after_
	setting window->id to zero
	(sys_init): select for SubstructureNotify on root window

	* events.c (client_message): call `client-message-hook' if
	message isn't handled. This is an `or' style hook

1999-07-31  John Harper  <john@dcs.warwick.ac.uk>

	* frames.c (list_frame_generator): detect when regenerating a
	frame by looking at w->frame instead of w->frame_parts (which
	can be null even when the window is framed)

	* gnome.c: new loadable module, minimal GNOME compliance
	(client list, button proxying, workspace details)

	* windows.c (Fwindow_size_hints): pass along the PPosition,
	PSize, USPosition and USSize flags

	* keys.c (event_proxy_fun): hook called when an unbound event
	occurs. Should return TRUE if it handles the event

1999-07-30  John Harper  <john@dcs.warwick.ac.uk>

	* frames.c: fix stupid stack-smashing bug

	* images.c (Fimage_modifier, Fset_image_modifier): new
	functions for playing with Imlib's image modifiers

	* frames.c (list_frame_generator): handle propagating the shape
	of the client to the frame here since it's a lot less ugly
	* windows.c: don't call set_window_shape in so many places

1999-07-29  John Harper  <john@dcs.warwick.ac.uk>

	* windows.c (add_window): set WM_STATE of client windows
	(Fwindow_put): when the `keymap' property changes, ungrab the
	old keymap, then grab the new one

	* keys.c (Fbind_keys, Funbind_keys): grab/ungrab events in
	client windows if binding to the `global-keymap' or a window's
	`keymap' property

	* frames.c (list_frame_generator): indirect through multiple
	symbols in frame_style

	* windows.c, server.c, functions.c, events.c, display.c:
	replaced some calls to XSync by XFlush. (XSync also buffers any
	pending events, preventing select from returning)

	* display.c: add a call to XSync in the rep_redisplay_fun hook

1999-07-28  John Harper  <john@dcs.warwick.ac.uk>

	* windows.c (fix_window_size): call set_window_shape

	* windows.c (add_window): set frame_style to nil not
	default-frame initially

	* frames.c: remove the frame data type, now frames are just
	lists, a null list is a null frame. Also, a window's frame may
	be specified as a symbol, in this case the plist of the symbol
	is used for the frame properties

	* windows.c: select VisibiltyChangeMask on the client window
	not the frame, the frame was always PartiallyObscured (by the
	client?)
	* events.c (visibility_notify): don't check that the event
	window is the frame anymore

	* sawmill.h (Lisp_Window): new field `shaped' set if the client
	window is shaped
	* events.c: handle shaped client windows (ShapeNotify events)
	* windows.c (set_window_shape): new function, copies the client
	windows shape to the frame
	(install_window_frame): call set_window_shape

	* display.c (shape_event_base, shape_error_base): new variables

	* frames.c (list_frame_generator): when regenerating a frame
	recenter the client window in the resized frame window

	* events.c (button_press): fake an unwind-protect around the
	event evaluation, so a ButtonRelease can unclick buttons
	without aborting

	* windows.c (install_window_frame): also select
	SubstructureRedirectMask for frame, so that we get
	ConfigureRequest events for the client window

1999-07-25  John Harper  <john@dcs.warwick.ac.uk>

	* frames.c (list_frame_generator): add LeaveWindowMask to frame
	parts

	* windows.c (Qplace_window_hook): new hook, called when windows
	are mapped for the first time
	(Fwindow_transient_p): now returns the id of the other window
	if the window is a transient
	(Fwindow_id, Fwindow_group_id): new functions
	(Fwindow_size_hints): new function, returns the size hints as
	an alist

	* sawmill.h: added exit types for the clean_exit_jmp_buf

	* main.c (Fquit, Frestart): new functions

	* keys.c (Qroot_window_keymap): window to use when mouse is
	over the root

	* functions.c (Fsync_server): new function, calls XSync ()

	* events.c (button_press): handle ButtonPress before evaluating
	the binding, and ButtonRelease after the binding
	(leave_notify): if leaving a frame part, ensure that the
	clicked count is zero

